---
- name: Disabling swap
  ansible.builtin.lineinfile:
    path: /etc/fstab
    state: absent
    regexp: '/swap.img'

- name: install needed packages
  apt:
    pkg:
    - apt-transport-https
    - ca-certificates
    - curl

- name: Update all packages to the latest version
  apt:
    upgrade: dist
    update_cache: yes

- name: Allow all access to tcp port ssh
  ufw:
    rule: allow
    port: "{{ ufw_ssh_port }}"
    proto: tcp

- name: Start and enable ufw
  ufw:
    state: enabled

- name: add every machine to hosts file
  lineinfile:
    dest: /etc/hosts
    line: "{{ hostvars[item].ansible_host }}     {{ hostvars[item].inventory_hostname_short }}"
    state: present
  with_items: "{{ groups.all }}"

- name: add extra entries to hosts file
  lineinfile:
    dest: /etc/hosts
    line: "{{ item }}"
    state: present
  with_items: "{{ prepare_os_extra_etc_hosts }}"


- name: Add a line to sysctl.conf
  ansible.builtin.lineinfile:
    path: /etc/sysctl.d/k8s.conf
    line: "{{ item }}"
    create: yes
  with_items:      
    - net.bridge.bridge-nf-call-iptables = 1
    - net.ipv4.ip_forward = 1
    - net.bridge.bridge-nf-call-ip6tables = 1
    - vm.overcommit_memory = 1
    - net.ipv4.ip_nonlocal_bind = 1


- name: Add a line to a file if the file does not exist, without passing regexp
  ansible.builtin.lineinfile:
    path: /etc/modules-load.d/k8s.conf
    line: "{{ item }}"
    create: yes
  with_items:
    - br_netfilter
    - overlay

- name: Load kernel modules
  shell: sysctl --system
  args:
    executable: /bin/bash

- name: add Kubernetes apt-key
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present

- name: add Kubernetes' APT repository
  apt_repository:
    repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
    state: present
    filename: 'kubernetes'

- name: Rebooting after os update
  reboot:
    msg: " rebooting after installing os and update"
